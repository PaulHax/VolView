diff --git a/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.d.ts b/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.d.ts
index a47a95f..9bf5c13 100644
--- a/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.d.ts
+++ b/node_modules/@kitware/vtk.js/Interaction/Style/InteractorStyleManipulator.d.ts
@@ -308,6 +308,21 @@ export interface vtkInteractorStyleManipulator extends vtkInteractorStyle {
   getMouseManipulators(): vtkCompositeMouseManipulator[];
   getMouseManipulators(): vtkCompositeMouseManipulator[];
   getMouseManipulators(): vtkCompositeMouseManipulator[];
+
+  /**
+   * Sets the center of rotation
+   * @param {Number} x 
+   * @param {Number} y 
+   * @param {Number} z 
+   */
+  setCenterOfRotation(x: number, y: number, z: number): boolean;
+  setCenterOfRotation(xyz: Vector3): boolean;
+
+  /**
+   * Gets the center of rotation.
+   * @returns {Vector3}
+   */
+  getCenterOfRotation(): Vector3;
 }
 
 export interface IInteractorStyleManipulatorInitialValues {
diff --git a/node_modules/@kitware/vtk.js/Proxy/Core/AbstractRepresentationProxy.d.ts b/node_modules/@kitware/vtk.js/Proxy/Core/AbstractRepresentationProxy.d.ts
index 1ed2e85..17a331e 100644
--- a/node_modules/@kitware/vtk.js/Proxy/Core/AbstractRepresentationProxy.d.ts
+++ b/node_modules/@kitware/vtk.js/Proxy/Core/AbstractRepresentationProxy.d.ts
@@ -11,7 +11,7 @@ export interface vtkAbstractRepresentationProxy extends VtkProxy {
   setColorBy(
     arrayName: string | null,
     arrayLocation: string,
-    componentIndex: number
+    componentIndex?: number
   );
   setRescaleOnColorBy(rescale: boolean): boolean;
   getRescaleOnColorBy(): boolean;
diff --git a/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.d.ts b/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.d.ts
index 6c71b8b..ce9bed7 100644
--- a/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.d.ts
+++ b/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.d.ts
@@ -4,7 +4,7 @@ import vtkColorTransferFunction from './../../Rendering/Core/ColorTransferFuncti
 // [x, r/h, g/s, b/v, m=0.5, s=0.0]
 export type RGBHSVPoint = [number, number, number, number, number?, number?];
 
-export enum ILookupTableProxyMode {
+export enum Mode {
   Preset = 0,
   RGBPoints = 1,
   HSVPoints = 2,
diff --git a/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.js b/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.js
index 197bc45..35f4b64 100644
--- a/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.js
+++ b/node_modules/@kitware/vtk.js/Proxy/Core/LookupTableProxy.js
@@ -146,4 +146,4 @@ var vtkLookupTableProxy$1 = {
   Defaults: Defaults
 };
 
-export { vtkLookupTableProxy$1 as default, newInstance };
+export { vtkLookupTableProxy$1 as default, newInstance, Mode, Defaults };
diff --git a/node_modules/@kitware/vtk.js/Proxy/Core/ViewProxy.d.ts b/node_modules/@kitware/vtk.js/Proxy/Core/ViewProxy.d.ts
index a3b5dd9..4c19e71 100644
--- a/node_modules/@kitware/vtk.js/Proxy/Core/ViewProxy.d.ts
+++ b/node_modules/@kitware/vtk.js/Proxy/Core/ViewProxy.d.ts
@@ -24,7 +24,7 @@ export interface vtkViewProxy extends VtkProxy {
   setContainer(container: HTMLElement | null): void;
   resize(): void;
   renderLater(): void;
-  render(blocking: boolean): void;
+  render(blocking?: boolean): void;
   resetCamera(): void;
 
   addRepresentation(representation: vtkAbstractRepresentationProxy): void;
diff --git a/node_modules/@kitware/vtk.js/macros.d.ts b/node_modules/@kitware/vtk.js/macros.d.ts
index e72f680..9b560ef 100644
--- a/node_modules/@kitware/vtk.js/macros.d.ts
+++ b/node_modules/@kitware/vtk.js/macros.d.ts
@@ -1,4 +1,4 @@
-import { vtkSubscription, vtkDebouncedFunction, vtkProperty, vtkPropertyDomain } from './interfaces';
+import { vtkSubscription, vtkDebouncedFunction, vtkProperty, vtkPropertyDomain, vtkObject } from './interfaces';
 
 /**
  * Allow user to redefine vtkXXXMacro method call.
@@ -420,7 +420,7 @@ export interface VtkLink {
   persistent: boolean;
 }
 
-export interface VtkProxy extends VtkKeyStore {
+export interface VtkProxy extends VtkKeyStore, vtkObject {
   getProxyId(): string;
   getProxyGroup(): string;
   getProxyName: () => string;
@@ -451,7 +451,6 @@ export interface VtkProxy extends VtkKeyStore {
   getPropertyDomainByName: (name: string) => vtkPropertyDomain;
 
   getProxySection: () => VtkProxySection;
-  delete: () => void;
 }
 
 export function proxy(publicAPI: object, model: object): void;
